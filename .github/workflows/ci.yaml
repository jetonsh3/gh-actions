name: CI

on:
  push:
    branches:
      - '**'
      - '!main'
  workflow_call:
  pull_request:
    types: [opened, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: './go.mod'
          cache-dependency-path: |
            go.sum

      - name: Run Tests
        run: go test ./...

  lint:
    name: Lint
    runs-on: ubuntu-latest
    outputs:
      pr-number: ${{ steps.pr.outputs.number }}
    permissions:
      contents: read
      pull-requests: read
      checks: write # allow write access to checks to allow the action to annotate code in the PR.
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: './go.mod'
          cache-dependency-path: |
            go.sum

      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.63.4
          args: --timeout=5m

      - name: PR Context
        uses: jwalton/gh-find-current-pr@master
        id: pr
        with:
          state: open

      - name: Output PR Number
        if: ${{ steps.pr.outputs.number != '' }}
        run: |
          echo "pr-number=${{ steps.pr.outputs.number }}" >> $GITHUB_OUTPUT

  build:
    name: Build
    needs: [test, lint]
    if: ${{ needs.lint.outputs.pr-number != '' || github.ref_name == 'main' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: './go.mod'
          cache-dependency-path: |
            go.sum

      - name: Build Go Binary
        run: |
          mkdir -p bin
          GOOS=linux GOARCH=${{ matrix.arch }} go build -o ./bin/ghactions-${{ matrix.arch }} ./cmd/server/main.go

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        uses: docker/build-push-action@v6
        with:
          context: ./bin
          file: ./Dockerfile
          push: false
          outputs: type=docker,dest=ghactions-${{ matrix.arch }}.tar
          platforms: linux/${{ matrix.arch }}
          tags: ghactions:${{ matrix.arch }}
          build-args: |
            SERVICE=ghactions-${{ matrix.arch }}

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v4
        if: ${{ github.event_name == 'push' }}
        with:
          name: ghactions-${{ matrix.arch }}
          path: ./ghactions-${{ matrix.arch }}.tar
          if-no-files-found: error
          retention-days: 1
          compression-level: 0
          overwrite: true
